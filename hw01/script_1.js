/* 1. Задать температуру в градусах по Цельсию. Вывести в alert соответствующую температуру в градусах по Фаренгейту. Подсказка: расчёт идёт по формуле: Tf = (9 / 5) * Tc + 32, где Tf – температура по Фаренгейту, Tc – температура по Цельсию */
var Tc = 28
var Tf = (9 / 5) * Tc + 32
alert(`Температура по Цельсию ${Tc} гр., а в градусах по Фаренгейту ${Tf}`)

/*2. Работа с переменными.
  3. Объявить две переменные: admin и name. Записать в name строку "Василий"; Скопировать значение из name в admin. Вывести admin (должно вывести «Василий»).
Значение вывел в консоль
  */

var name = 'Василий'
var admin = name
console.log(admin)

// 4. *Чему будет равно JS-выражение 1000 + "108"/

console.log(1000 + "108")

/* Если есть знак плюс между числом и строкой, объединение имеет приоритет над сложением. Все остальные числовые операторы, когда один операнд является строкой, а другой-числом, будут пытаться преобразовать строку в число, поэтому данный пример выведет в консоль 1000108 */

// 5. Самостоятельно разобраться с атрибутами тега script (async и defer)
/* Атрибут defer сообщает браузеру, что он должен продолжать обрабатывать страницу и загружать скрипт в фоновом режиме, а затем запустить этот скрипт, когда он загрузится.
Скрипты с defer никогда не блокируют страницу.
Скрипты с defer всегда выполняются, когда дерево DOM готово, но до события DOMContentLoaded.

Атрибут async означает, что скрипт абсолютно независим:

Страница не ждёт асинхронных скриптов, содержимое обрабатывается и отображается.
Событие DOMContentLoaded и асинхронные скрипты не ждут друг друга:
DOMContentLoaded может произойти как до асинхронного скрипта (если асинхронный скрипт завершит загрузку после того, как страница будет готова),
…так и после асинхронного скрипта (если он короткий или уже содержится в HTTP-кеше)
Остальные скрипты не ждут async, и скрипты casync не ждут другие скрипты.
Так что если у нас есть несколько скриптов с async, они могут выполняться в любом порядке.
Асинхронные скрипты очень полезны для добавления на страницу сторонних скриптов: счётчиков, рекламы и т.д. Они не зависят от наших скриптов, и мы тоже не должны ждать их. */